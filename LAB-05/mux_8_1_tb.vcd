$date
	Thu Oct  6 11:05:11 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mux_8_1_tb $end
$var wire 4 ! Y [3:0] $end
$var reg 3 " S [2:0] $end
$var reg 4 # i0 [3:0] $end
$var reg 4 $ i1 [3:0] $end
$var reg 4 % i2 [3:0] $end
$var reg 4 & i3 [3:0] $end
$var reg 4 ' i4 [3:0] $end
$var reg 4 ( i5 [3:0] $end
$var reg 4 ) i6 [3:0] $end
$var reg 4 * i7 [3:0] $end
$scope module uut $end
$var wire 4 + i0 [3:0] $end
$var wire 4 , i1 [3:0] $end
$var wire 4 - i2 [3:0] $end
$var wire 4 . i3 [3:0] $end
$var wire 4 / i4 [3:0] $end
$var wire 4 0 i5 [3:0] $end
$var wire 4 1 i6 [3:0] $end
$var wire 4 2 i7 [3:0] $end
$var wire 3 3 s [2:0] $end
$var wire 4 4 y [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 4
b0 3
b1110 2
b0 1
b111 0
b11 /
b1111 .
b1 -
b1000 ,
b100 +
b1110 *
b0 )
b111 (
b11 '
b1111 &
b1 %
b1000 $
b100 #
b0 "
b100 !
$end
#1000
b1000 !
b1000 4
b1 "
b1 3
#2000
b1 !
b1 4
b10 "
b10 3
#3000
b1111 !
b1111 4
b11 "
b11 3
#4000
b11 !
b11 4
b100 "
b100 3
#5000
b111 !
b111 4
b101 "
b101 3
#6000
b0 !
b0 4
b110 "
b110 3
#7000
b1110 !
b1110 4
b111 "
b111 3
#8000
